//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KVK_DataAccess.EWS_PME {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", ConfigurationName="EWS_PME.IDataExchange")]
    public interface IDataExchange {
        
        // CODEGEN: Generating message contract since the operation GetWebServiceInformation is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetWebServiceInform" +
            "ationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetWebServiceInform" +
            "ationOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetWebServiceInform" +
            "ationFault_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetWebServiceInform" +
            "ationFault_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetWebServiceInform" +
            "ationFault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse1 GetWebServiceInformation(KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetWebServiceInform" +
            "ationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetWebServiceInform" +
            "ationOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse1> GetWebServiceInformationAsync(KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetContainerItems is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsIn" +
            "", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsOu" +
            "t")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsFa" +
            "ult_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsFa" +
            "ult_Missing_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsFa" +
            "ult_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsFa" +
            "ult_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetContainerItemsResponse1 GetContainerItems(KVK_DataAccess.EWS_PME.GetContainerItemsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsIn" +
            "", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetContainerItemsOu" +
            "t")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetContainerItemsResponse1> GetContainerItemsAsync(KVK_DataAccess.EWS_PME.GetContainerItemsRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetItems is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsFault_Opera" +
            "tion_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsFault_Missi" +
            "ng_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsFault_Permi" +
            "ssion_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsFault_TimeO" +
            "ut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetItemsResponse1 GetItems(KVK_DataAccess.EWS_PME.GetItemsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetItemsOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetItemsResponse1> GetItemsAsync(KVK_DataAccess.EWS_PME.GetItemsRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetValues is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesFault_Oper" +
            "ation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesFault_Miss" +
            "ing_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesFault_Perm" +
            "ission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesFault_Time" +
            "Out", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetValuesResponse1 GetValues(KVK_DataAccess.EWS_PME.GetValuesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetValuesOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetValuesResponse1> GetValuesAsync(KVK_DataAccess.EWS_PME.GetValuesRequest1 request);
        
        // CODEGEN: Generating message contract since the operation SetValues is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesFault_Oper" +
            "ation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesFault_Miss" +
            "ing_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesFault_Perm" +
            "ission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesFault_Time" +
            "Out", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesFault_Miss" +
            "ing_Value_List", Name="Fault_Missing_Value_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesFault_Uneq" +
            "ual_Lists", Name="Fault_Unequal_Lists", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.SetValuesResponse1 SetValues(KVK_DataAccess.EWS_PME.SetValuesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/SetValuesOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.SetValuesResponse1> SetValuesAsync(KVK_DataAccess.EWS_PME.SetValuesRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetHistory is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryFault_Ope" +
            "ration_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryFault_Inv" +
            "alid_Reference", Name="Fault_Invalid_Reference", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryFault_Per" +
            "mission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryFault_Tim" +
            "eOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryFault_Inv" +
            "alid_Id", Name="Fault_Invalid_Id", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryFault_Inv" +
            "alid_Time", Name="Fault_Invalid_Time", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetHistoryResponse1 GetHistory(KVK_DataAccess.EWS_PME.GetHistoryRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoryOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHistoryResponse1> GetHistoryAsync(KVK_DataAccess.EWS_PME.GetHistoryRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetAlarmEvents is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsFault" +
            "_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsFault" +
            "_Invalid_Reference", Name="Fault_Invalid_Reference", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsFault" +
            "_Invalid_Priority", Name="Fault_Invalid_Priority", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsFault" +
            "_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsFault" +
            "_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsFault" +
            "_Invalid_Type", Name="Fault_Invalid_Type", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetAlarmEventsResponse1 GetAlarmEvents(KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventsOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmEventsResponse1> GetAlarmEventsAsync(KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetUpdatedAlarmEvents is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsFault_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsFault_Invalid_Reference", Name="Fault_Invalid_Reference", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsFault_Invalid_Priority", Name="Fault_Invalid_Priority", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsFault_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsFault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsFault_Invalid_Type", Name="Fault_Invalid_Type", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsFault_Invalid_Time", Name="Fault_Invalid_Time", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse1 GetUpdatedAlarmEvents(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetUpdatedAlarmEven" +
            "tsOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse1> GetUpdatedAlarmEventsAsync(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1 request);
        
        // CODEGEN: Generating message contract since the operation AcknowledgeAlarmEvents is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsFault_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsFault_Missing_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsFault_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsFault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse1 AcknowledgeAlarmEvents(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/AcknowledgeAlarmEve" +
            "ntsOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse1> AcknowledgeAlarmEventsAsync(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetAlarmEventTypes is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventTypesI" +
            "n", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventTypesO" +
            "ut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventTypesF" +
            "ault_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventTypesF" +
            "ault_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventTypesF" +
            "ault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse1 GetAlarmEventTypes(KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventTypesI" +
            "n", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmEventTypesO" +
            "ut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse1> GetAlarmEventTypesAsync(KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1 request);
        
        // CODEGEN: Generating message contract since the operation Subscribe is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Oper" +
            "ation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Perm" +
            "ission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Time" +
            "Out", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Inva" +
            "lidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Oper" +
            "ation_Failed", Name="Fault_Operation_Failed", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Inva" +
            "lid_Time", Name="Fault_Invalid_Time", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Miss" +
            "ing_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Inva" +
            "lid_EventMode", Name="Fault_Invalid_EventMode", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Inva" +
            "lid_EventType", Name="Fault_Invalid_EventType", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Inva" +
            "lid_Priority", Name="Fault_Invalid_Priority", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Inva" +
            "lid_Type", Name="Fault_Invalid_Type", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeFault_Inva" +
            "lid_Alarmfilter", Name="Fault_Invalid_Alarmfilter", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.SubscribeResponse1 Subscribe(KVK_DataAccess.EWS_PME.SubscribeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/SubscribeOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.SubscribeResponse1> SubscribeAsync(KVK_DataAccess.EWS_PME.SubscribeRequest request);
        
        // CODEGEN: Generating message contract since the operation ForceValues is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesFault_Op" +
            "eration_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesFault_Pe" +
            "rmission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesFault_Ti" +
            "meOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesFault_In" +
            "validRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesFault_Va" +
            "lueitem_List", Name="Fault_Missing_Valueitem_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesFault_In" +
            "valid_Value", Name="Fault_Invalid_Value", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesFault_In" +
            "valid_Id", Name="Fault_Invalid_Id", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.ForceValuesResponse1 ForceValues(KVK_DataAccess.EWS_PME.ForceValuesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/ForceValuesOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.ForceValuesResponse1> ForceValuesAsync(KVK_DataAccess.EWS_PME.ForceValuesRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetEnums is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsFault_Opera" +
            "tion_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsFault_Permi" +
            "ssion_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsFault_TimeO" +
            "ut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsFault_Inval" +
            "idRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsFault_Missi" +
            "ng_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetEnumsResponse1 GetEnums(KVK_DataAccess.EWS_PME.GetEnumsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetEnumsOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetEnumsResponse1> GetEnumsAsync(KVK_DataAccess.EWS_PME.GetEnumsRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetAlarmHistory is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_InvalidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_Invalid_Id", Name="Fault_Invalid_Id", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_Invalid_Reference", Name="Fault_Invalid_Reference", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_Invalid_Time", Name="Fault_Invalid_Time", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_Invalid_Priority", Name="Fault_Invalid_Priority", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryFaul" +
            "t_Invalid_Type", Name="Fault_Invalid_Type", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse1 GetAlarmHistory(KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetAlarmHistoryOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse1> GetAlarmHistoryAsync(KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetHierarchicalInformation is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationFault_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationFault_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationFault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationFault_InvalidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationFault_Invalid_Id", Name="Fault_Invalid_Id", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse1 GetHierarchicalInformation(KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHierarchicalInfo" +
            "rmationOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse1> GetHierarchicalInformationAsync(KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetHistoricalDataAggregation is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_InvalidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_Invalid_Id", Name="Fault_Invalid_Id", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_Invalid_Reference", Name="Fault_Invalid_Reference", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_Invalid_Time", Name="Fault_Invalid_Time", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_InvalidGroup", Name="Fault_Invalid_Group", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationFault_Invalid_Type", Name="Fault_Invalid_Type", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse1 GetHistoricalDataAggregation(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetHistoricalDataAg" +
            "gregationOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse1> GetHistoricalDataAggregationAsync(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1 request);
        
        // CODEGEN: Generating message contract since the operation Unsubscribe is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeFault_Op" +
            "eration_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeFault_Pe" +
            "rmission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeStatusFa" +
            "ult_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeFault_In" +
            "validRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeFault_Op" +
            "eration_Failed", Name="Fault_Operation_Failed", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeFault_In" +
            "valid_Subscription", Name="Fault_Invalid_Subscription", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeFault_Su" +
            "bscription_Terminated", Name="Fault_Subscription_Terminated", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.UnsubscribeResponse1 Unsubscribe(KVK_DataAccess.EWS_PME.UnsubscribeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/UnsubscribeOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.UnsubscribeResponse1> UnsubscribeAsync(KVK_DataAccess.EWS_PME.UnsubscribeRequest request);
        
        // CODEGEN: Generating message contract since the operation Renew is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewFault_Operatio" +
            "n_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewFault_Permissi" +
            "on_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewFault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewFault_InvalidR" +
            "equest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewFault_Operatio" +
            "n_Failed", Name="Fault_Operation_Failed", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewFault_Invalid_" +
            "Time", Name="Fault_Invalid_Time", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewFault_Invalid_" +
            "Subscription", Name="Fault_Invalid_Subscription", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.RenewResponse1 Renew(KVK_DataAccess.EWS_PME.RenewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/RenewOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.RenewResponse1> RenewAsync(KVK_DataAccess.EWS_PME.RenewRequest request);
        
        // CODEGEN: Generating message contract since the operation GetNotification is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationFaul" +
            "t_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationFaul" +
            "t_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationFaul" +
            "t_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationFaul" +
            "t_InvalidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationFaul" +
            "t_Invalid_Subscription", Name="Fault_Invalid_Subscription", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationFaul" +
            "t_Invalid_Notification_Id", Name="Fault_Invalid_Notification_Id", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetNotificationResponse1 GetNotification(KVK_DataAccess.EWS_PME.GetNotificationRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetNotificationOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetNotificationResponse1> GetNotificationAsync(KVK_DataAccess.EWS_PME.GetNotificationRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetSystemEvents is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsFaul" +
            "t_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsFaul" +
            "t_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsFaul" +
            "t_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsFaul" +
            "t_InvalidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsFaul" +
            "t_Invalid_Reference", Name="Fault_Invalid_Reference", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsFaul" +
            "t_Invalid_Priority", Name="Fault_Invalid_Priority", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsFaul" +
            "t_Invalid_Type", Name="Fault_Invalid_Type", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetSystemEventsResponse1 GetSystemEvents(KVK_DataAccess.EWS_PME.GetSystemEventsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventsOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetSystemEventsResponse1> GetSystemEventsAsync(KVK_DataAccess.EWS_PME.GetSystemEventsRequest1 request);
        
        // CODEGEN: Generating message contract since the operation GetSystemEventTypes is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "In", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "Out")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "Fault_Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "Fault_Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "Fault_TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "Fault_InvalidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse1 GetSystemEventTypes(KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "In", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/GetSystemEventTypes" +
            "Out")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse1> GetSystemEventTypesAsync(KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1 request);
        
        // CODEGEN: Generating message contract since the operation UnforceValues is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesOut")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesFault_" +
            "Operation_Not_Supported", Name="Fault_Operation_Not_Supported", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesFault_" +
            "Permission_Denied", Name="Fault_Permission_Denied", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesFault_" +
            "TimeOut", Name="Fault_TimeOut", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesFault_" +
            "InvalidRequest", Name="Fault_InvalidRequest", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesFault_" +
            "Missing_Id_List", Name="Fault_Missing_Id_List", Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05/DataExchangeInterfa" +
            "ce/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        KVK_DataAccess.EWS_PME.UnforceValuesResponse1 UnforceValues(KVK_DataAccess.EWS_PME.UnforceValuesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesIn", ReplyAction="http://www.schneider-electric.com/common/dataexchange/2011/05/UnforceValuesOut")]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.UnforceValuesResponse1> UnforceValuesAsync(KVK_DataAccess.EWS_PME.UnforceValuesRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetWebServiceInformationRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetSystemEventsResponseStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool moreDataAvailableField;
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool MoreDataAvailable {
            get {
                return this.moreDataAvailableField;
            }
            set {
                this.moreDataAvailableField = value;
                this.RaisePropertyChanged("MoreDataAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetSystemEventsFilterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string priorityFromField;
        
        private string priorityToField;
        
        private System.DateTime timeFromField;
        
        private bool timeFromFieldSpecified;
        
        private System.DateTime timeToField;
        
        private bool timeToFieldSpecified;
        
        private string[] typesField;
        
        private string[] idsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string PriorityFrom {
            get {
                return this.priorityFromField;
            }
            set {
                this.priorityFromField = value;
                this.RaisePropertyChanged("PriorityFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=1)]
        public string PriorityTo {
            get {
                return this.priorityToField;
            }
            set {
                this.priorityToField = value;
                this.RaisePropertyChanged("PriorityTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
                this.RaisePropertyChanged("TimeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeFromSpecified {
            get {
                return this.timeFromFieldSpecified;
            }
            set {
                this.timeFromFieldSpecified = value;
                this.RaisePropertyChanged("TimeFromSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
                this.RaisePropertyChanged("TimeTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeToSpecified {
            get {
                return this.timeToFieldSpecified;
            }
            set {
                this.timeToFieldSpecified = value;
                this.RaisePropertyChanged("TimeToSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Type", IsNullable=false)]
        public string[] Types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
                this.RaisePropertyChanged("Types");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public string[] Ids {
            get {
                return this.idsField;
            }
            set {
                this.idsField = value;
                this.RaisePropertyChanged("Ids");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetEventsParameterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class HierarchyChangedEventType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private System.DateTime timeStampField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("TimeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ValueChangedEventType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private string stateField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("TimeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
                this.RaisePropertyChanged("TimeStampSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=2)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class SystemEventsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string typeField;
        
        private string messageField;
        
        private System.DateTime timeStampField;
        
        private string priorityField;
        
        private string sourceIDField;
        
        private string sourceNameField;
        
        private MetaModelType[] metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("TimeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=4)]
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string SourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
                this.RaisePropertyChanged("SourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string SourceName {
            get {
                return this.sourceNameField;
            }
            set {
                this.sourceNameField = value;
                this.RaisePropertyChanged("SourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Model", IsNullable=false)]
        public MetaModelType[] Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class MetaModelType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MetadataCategoryType[] categoryField;
        
        private string idField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Category", Order=0)]
        public MetadataCategoryType[] Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class MetadataCategoryType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MetadataPropertyType[] propertyField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Property", Order=0)]
        public MetadataPropertyType[] Property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
                this.RaisePropertyChanged("Property");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class MetadataPropertyType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ItemChangedEvents : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SystemEventsType[] systemEventsField;
        
        private ValueChangedEventType[] valueChangedEventsField;
        
        private HierarchyChangedEventType[] hierarchyChangedEventsField;
        
        private ArrayOfAlarmEventType alarmEventsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SystemEvent", IsNullable=false)]
        public SystemEventsType[] SystemEvents {
            get {
                return this.systemEventsField;
            }
            set {
                this.systemEventsField = value;
                this.RaisePropertyChanged("SystemEvents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Event", IsNullable=false)]
        public ValueChangedEventType[] ValueChangedEvents {
            get {
                return this.valueChangedEventsField;
            }
            set {
                this.valueChangedEventsField = value;
                this.RaisePropertyChanged("ValueChangedEvents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Event", IsNullable=false)]
        public HierarchyChangedEventType[] HierarchyChangedEvents {
            get {
                return this.hierarchyChangedEventsField;
            }
            set {
                this.hierarchyChangedEventsField = value;
                this.RaisePropertyChanged("HierarchyChangedEvents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public ArrayOfAlarmEventType AlarmEvents {
            get {
                return this.alarmEventsField;
            }
            set {
                this.alarmEventsField = value;
                this.RaisePropertyChanged("AlarmEvents");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ArrayOfAlarmEventType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AlarmEventsType[] alarmEventField;
        
        private MetaModelType[] metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AlarmEvent", Order=0)]
        public AlarmEventsType[] AlarmEvent {
            get {
                return this.alarmEventField;
            }
            set {
                this.alarmEventField = value;
                this.RaisePropertyChanged("AlarmEvent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Model", IsNullable=false)]
        public MetaModelType[] Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class AlarmEventsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string sourceIDField;
        
        private string sourceNameField;
        
        private string acknowledgeableField;
        
        private System.DateTime timeStampOccurrenceField;
        
        private System.DateTime timeStampTransitionField;
        
        private string priorityField;
        
        private string stateField;
        
        private string typeField;
        
        private string messageField;
        
        private Metadata_12 metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
                this.RaisePropertyChanged("SourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SourceName {
            get {
                return this.sourceNameField;
            }
            set {
                this.sourceNameField = value;
                this.RaisePropertyChanged("SourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=3)]
        public string Acknowledgeable {
            get {
                return this.acknowledgeableField;
            }
            set {
                this.acknowledgeableField = value;
                this.RaisePropertyChanged("Acknowledgeable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime TimeStampOccurrence {
            get {
                return this.timeStampOccurrenceField;
            }
            set {
                this.timeStampOccurrenceField = value;
                this.RaisePropertyChanged("TimeStampOccurrence");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime TimeStampTransition {
            get {
                return this.timeStampTransitionField;
            }
            set {
                this.timeStampTransitionField = value;
                this.RaisePropertyChanged("TimeStampTransition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=6)]
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=7)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public Metadata_12 Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class Metadata_12 : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class AggregationRecordType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        private System.DateTime timeStampField;
        
        private string periodField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("TimeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=2)]
        public string Period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
                this.RaisePropertyChanged("Period");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class HistoricalDataAggregationRecordsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueItemIdField;
        
        private string unitField;
        
        private string typeField;
        
        private AggregationRecordType[] listField;
        
        private MetaModelType[] metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ValueItemId {
            get {
                return this.valueItemIdField;
            }
            set {
                this.valueItemIdField = value;
                this.RaisePropertyChanged("ValueItemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
                this.RaisePropertyChanged("Unit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("AggregationRecord", IsNullable=false)]
        public AggregationRecordType[] List {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
                this.RaisePropertyChanged("List");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Model", IsNullable=false)]
        public MetaModelType[] Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class HistoricalDataAggregationResponseStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool moreDataAvailableField;
        
        private string moreDataRefField;
        
        private System.DateTime timeFromField;
        
        private System.DateTime timeToField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool MoreDataAvailable {
            get {
                return this.moreDataAvailableField;
            }
            set {
                this.moreDataAvailableField = value;
                this.RaisePropertyChanged("MoreDataAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
                this.RaisePropertyChanged("TimeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
                this.RaisePropertyChanged("TimeTo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoricalDataAggregationFilterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timeFromField;
        
        private bool timeFromFieldSpecified;
        
        private System.DateTime timeToField;
        
        private bool timeToFieldSpecified;
        
        private string aggregationGroupField;
        
        private string[] aggregationPeriodsField;
        
        private string aggregationTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
                this.RaisePropertyChanged("TimeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeFromSpecified {
            get {
                return this.timeFromFieldSpecified;
            }
            set {
                this.timeFromFieldSpecified = value;
                this.RaisePropertyChanged("TimeFromSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
                this.RaisePropertyChanged("TimeTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeToSpecified {
            get {
                return this.timeToFieldSpecified;
            }
            set {
                this.timeToFieldSpecified = value;
                this.RaisePropertyChanged("TimeToSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=2)]
        public string AggregationGroup {
            get {
                return this.aggregationGroupField;
            }
            set {
                this.aggregationGroupField = value;
                this.RaisePropertyChanged("AggregationGroup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Period", DataType="integer", IsNullable=false)]
        public string[] AggregationPeriods {
            get {
                return this.aggregationPeriodsField;
            }
            set {
                this.aggregationPeriodsField = value;
                this.RaisePropertyChanged("AggregationPeriods");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=4)]
        public string AggregationType {
            get {
                return this.aggregationTypeField;
            }
            set {
                this.aggregationTypeField = value;
                this.RaisePropertyChanged("AggregationType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoricalDataAggregationParameterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ItemPathType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string orderField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
                this.RaisePropertyChanged("order");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class SimpleResponseStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool moreDataAvailableField;
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool MoreDataAvailable {
            get {
                return this.moreDataAvailableField;
            }
            set {
                this.moreDataAvailableField = value;
                this.RaisePropertyChanged("MoreDataAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmHistoryFilterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timeFromField;
        
        private bool timeFromFieldSpecified;
        
        private System.DateTime timeToField;
        
        private bool timeToFieldSpecified;
        
        private string priorityFromField;
        
        private string priorityToField;
        
        private string[] typesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
                this.RaisePropertyChanged("TimeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeFromSpecified {
            get {
                return this.timeFromFieldSpecified;
            }
            set {
                this.timeFromFieldSpecified = value;
                this.RaisePropertyChanged("TimeFromSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
                this.RaisePropertyChanged("TimeTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeToSpecified {
            get {
                return this.timeToFieldSpecified;
            }
            set {
                this.timeToFieldSpecified = value;
                this.RaisePropertyChanged("TimeToSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=2)]
        public string PriorityFrom {
            get {
                return this.priorityFromField;
            }
            set {
                this.priorityFromField = value;
                this.RaisePropertyChanged("PriorityFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=3)]
        public string PriorityTo {
            get {
                return this.priorityToField;
            }
            set {
                this.priorityToField = value;
                this.RaisePropertyChanged("PriorityTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Type", IsNullable=false)]
        public string[] Types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
                this.RaisePropertyChanged("Types");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmHistoryParameterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class EnumType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        private string textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class EnumsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private EnumType[] enumValuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("EnumValue", IsNullable=false)]
        public EnumType[] EnumValues {
            get {
                return this.enumValuesField;
            }
            set {
                this.enumValuesField = value;
                this.RaisePropertyChanged("EnumValues");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class SubscriptionManagerType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetEventsFilterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string priorityFromField;
        
        private string priorityToField;
        
        private string[] typesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string PriorityFrom {
            get {
                return this.priorityFromField;
            }
            set {
                this.priorityFromField = value;
                this.RaisePropertyChanged("PriorityFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=1)]
        public string PriorityTo {
            get {
                return this.priorityToField;
            }
            set {
                this.priorityToField = value;
                this.RaisePropertyChanged("PriorityTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Type", IsNullable=false)]
        public string[] Types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
                this.RaisePropertyChanged("Types");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ArrayOfEventIdType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] idField;
        
        private string eventModeField;
        
        public ArrayOfEventIdType() {
            this.eventModeField = "0";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Id", Order=0)]
        public string[] Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        [System.ComponentModel.DefaultValueAttribute("0")]
        public string eventMode {
            get {
                return this.eventModeField;
            }
            set {
                this.eventModeField = value;
                this.RaisePropertyChanged("eventMode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class SubscribeFilterType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string eventTypeField;
        
        private ArrayOfEventIdType idsField;
        
        private GetEventsFilterType eventFilterField;
        
        private string keepAliveCycleTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string EventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
                this.RaisePropertyChanged("EventType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ArrayOfEventIdType Ids {
            get {
                return this.idsField;
            }
            set {
                this.idsField = value;
                this.RaisePropertyChanged("Ids");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public GetEventsFilterType EventFilter {
            get {
                return this.eventFilterField;
            }
            set {
                this.eventFilterField = value;
                this.RaisePropertyChanged("EventFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=3)]
        public string KeepAliveCycleTime {
            get {
                return this.keepAliveCycleTimeField;
            }
            set {
                this.keepAliveCycleTimeField = value;
                this.RaisePropertyChanged("KeepAliveCycleTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class AddressType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class DeliveryType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AddressType notifyToField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AddressType NotifyTo {
            get {
                return this.notifyToField;
            }
            set {
                this.notifyToField = value;
                this.RaisePropertyChanged("NotifyTo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class AlarmResponseStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool moreDataAvailableField;
        
        private string moreDataRefField;
        
        private string lastUpdateField;
        
        private bool needsRefreshField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool MoreDataAvailable {
            get {
                return this.moreDataAvailableField;
            }
            set {
                this.moreDataAvailableField = value;
                this.RaisePropertyChanged("MoreDataAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
                this.RaisePropertyChanged("LastUpdate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool NeedsRefresh {
            get {
                return this.needsRefreshField;
            }
            set {
                this.needsRefreshField = value;
                this.RaisePropertyChanged("NeedsRefresh");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class HistoryRecordType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        private string stateField;
        
        private System.DateTime timeStampField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=1)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("TimeStamp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class HistoryRecordsType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueItemIdField;
        
        private string unitField;
        
        private string typeField;
        
        private HistoryRecordType[] listField;
        
        private Metadata_12 metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ValueItemId {
            get {
                return this.valueItemIdField;
            }
            set {
                this.valueItemIdField = value;
                this.RaisePropertyChanged("ValueItemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
                this.RaisePropertyChanged("Unit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("HistoryRecord", IsNullable=false)]
        public HistoryRecordType[] List {
            get {
                return this.listField;
            }
            set {
                this.listField = value;
                this.RaisePropertyChanged("List");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Metadata_12 Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class HistoryResponseStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool moreDataAvailableField;
        
        private string moreDataRefField;
        
        private System.DateTime timeFromField;
        
        private System.DateTime timeToField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool MoreDataAvailable {
            get {
                return this.moreDataAvailableField;
            }
            set {
                this.moreDataAvailableField = value;
                this.RaisePropertyChanged("MoreDataAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
                this.RaisePropertyChanged("TimeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
                this.RaisePropertyChanged("TimeTo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ResultType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private bool successField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ValueTypeStateless : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ValueTypeStateful : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string stateField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=1)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ValueItemType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string typeField;
        
        private string valueField;
        
        private string unitField;
        
        private Metadata_12 metadataField;
        
        private string writeableField;
        
        private string stateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
                this.RaisePropertyChanged("Unit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Metadata_12 Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=7)]
        public string Writeable {
            get {
                return this.writeableField;
            }
            set {
                this.writeableField = value;
                this.RaisePropertyChanged("Writeable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=8)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ArrayOfItemType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ValueItemType[] valueItemsField;
        
        private HistoryItemType[] historyItemsField;
        
        private AlarmItemType[] alarmItemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueItem", IsNullable=false)]
        public ValueItemType[] ValueItems {
            get {
                return this.valueItemsField;
            }
            set {
                this.valueItemsField = value;
                this.RaisePropertyChanged("ValueItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("HistoryItem", IsNullable=false)]
        public HistoryItemType[] HistoryItems {
            get {
                return this.historyItemsField;
            }
            set {
                this.historyItemsField = value;
                this.RaisePropertyChanged("HistoryItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("AlarmItem", IsNullable=false)]
        public AlarmItemType[] AlarmItems {
            get {
                return this.alarmItemsField;
            }
            set {
                this.alarmItemsField = value;
                this.RaisePropertyChanged("AlarmItems");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class HistoryItemType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string typeField;
        
        private string unitField;
        
        private string valueItemIdField;
        
        private Metadata_12 metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
                this.RaisePropertyChanged("Unit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ValueItemId {
            get {
                return this.valueItemIdField;
            }
            set {
                this.valueItemIdField = value;
                this.RaisePropertyChanged("ValueItemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Metadata_12 Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class AlarmItemType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string stateField;
        
        private string valueItemIdField;
        
        private Metadata_12 metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=3)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ValueItemId {
            get {
                return this.valueItemIdField;
            }
            set {
                this.valueItemIdField = value;
                this.RaisePropertyChanged("ValueItemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public Metadata_12 Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetContainerItemsResponseStatusType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool moreDataAvailableField;
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool MoreDataAvailable {
            get {
                return this.moreDataAvailableField;
            }
            set {
                this.moreDataAvailableField = value;
                this.RaisePropertyChanged("MoreDataAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ErrorResultType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ValueItemTypeBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string typeField;
        
        private string unitField;
        
        private string writeableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
                this.RaisePropertyChanged("Unit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=5)]
        public string Writeable {
            get {
                return this.writeableField;
            }
            set {
                this.writeableField = value;
                this.RaisePropertyChanged("Writeable");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ContainerItemSimpleType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ContainerItemType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string typeField;
        
        private ContainerItemTypeItems itemsField;
        
        private Metadata_12 metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public ContainerItemTypeItems Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
                this.RaisePropertyChanged("Items");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public Metadata_12 Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("Metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ContainerItemTypeItems : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContainerItemSimpleType[] containerItemsField;
        
        private ValueItemTypeBase[] valueItemsField;
        
        private HistoryItemType[] historyItemsField;
        
        private AlarmItemType[] alarmItemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ContainerItem", IsNullable=false)]
        public ContainerItemSimpleType[] ContainerItems {
            get {
                return this.containerItemsField;
            }
            set {
                this.containerItemsField = value;
                this.RaisePropertyChanged("ContainerItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueItem", IsNullable=false)]
        public ValueItemTypeBase[] ValueItems {
            get {
                return this.valueItemsField;
            }
            set {
                this.valueItemsField = value;
                this.RaisePropertyChanged("ValueItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("HistoryItem", IsNullable=false)]
        public HistoryItemType[] HistoryItems {
            get {
                return this.historyItemsField;
            }
            set {
                this.historyItemsField = value;
                this.RaisePropertyChanged("HistoryItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("AlarmItem", IsNullable=false)]
        public AlarmItemType[] AlarmItems {
            get {
                return this.alarmItemsField;
            }
            set {
                this.alarmItemsField = value;
                this.RaisePropertyChanged("AlarmItems");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetWebServiceInformationSystem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string versionField;
        
        private string idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetWebServiceInformationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetWebServiceInformationResponseGetWebServiceInformationVersion getWebServiceInformationVersionField;
        
        private string[] getWebServiceInformationSupportedOperationsField;
        
        private string[] getWebServiceInformationSupportedProfilesField;
        
        private GetWebServiceInformationSystem systemInfoField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetWebServiceInformationResponseGetWebServiceInformationVersion GetWebServiceInformationVersion {
            get {
                return this.getWebServiceInformationVersionField;
            }
            set {
                this.getWebServiceInformationVersionField = value;
                this.RaisePropertyChanged("GetWebServiceInformationVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Operation", IsNullable=false)]
        public string[] GetWebServiceInformationSupportedOperations {
            get {
                return this.getWebServiceInformationSupportedOperationsField;
            }
            set {
                this.getWebServiceInformationSupportedOperationsField = value;
                this.RaisePropertyChanged("GetWebServiceInformationSupportedOperations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Profiles", IsNullable=false)]
        public string[] GetWebServiceInformationSupportedProfiles {
            get {
                return this.getWebServiceInformationSupportedProfilesField;
            }
            set {
                this.getWebServiceInformationSupportedProfilesField = value;
                this.RaisePropertyChanged("GetWebServiceInformationSupportedProfiles");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public GetWebServiceInformationSystem SystemInfo {
            get {
                return this.systemInfoField;
            }
            set {
                this.systemInfoField = value;
                this.RaisePropertyChanged("SystemInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetWebServiceInformationResponseGetWebServiceInformationVersion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string majorVersionField;
        
        private string minorVersionField;
        
        private string usedNameSpaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string MajorVersion {
            get {
                return this.majorVersionField;
            }
            set {
                this.majorVersionField = value;
                this.RaisePropertyChanged("MajorVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MinorVersion {
            get {
                return this.minorVersionField;
            }
            set {
                this.minorVersionField = value;
                this.RaisePropertyChanged("MinorVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string UsedNameSpace {
            get {
                return this.usedNameSpaceField;
            }
            set {
                this.usedNameSpaceField = value;
                this.RaisePropertyChanged("UsedNameSpace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWebServiceInformationRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest GetWebServiceInformationRequest;
        
        public GetWebServiceInformationRequest1() {
        }
        
        public GetWebServiceInformationRequest1(KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest GetWebServiceInformationRequest) {
            this.GetWebServiceInformationRequest = GetWebServiceInformationRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWebServiceInformationResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse GetWebServiceInformationResponse;
        
        public GetWebServiceInformationResponse1() {
        }
        
        public GetWebServiceInformationResponse1(KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse GetWebServiceInformationResponse) {
            this.GetWebServiceInformationResponse = GetWebServiceInformationResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetContainerItemsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] getContainerItemsIdsField;
        
        private GetContainerItemsRequestGetContainerItemsParameter getContainerItemsParameterField;
        
        private string versionField;
        
        private bool metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public string[] GetContainerItemsIds {
            get {
                return this.getContainerItemsIdsField;
            }
            set {
                this.getContainerItemsIdsField = value;
                this.RaisePropertyChanged("GetContainerItemsIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public GetContainerItemsRequestGetContainerItemsParameter GetContainerItemsParameter {
            get {
                return this.getContainerItemsParameterField;
            }
            set {
                this.getContainerItemsParameterField = value;
                this.RaisePropertyChanged("GetContainerItemsParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetContainerItemsRequestGetContainerItemsParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetContainerItemsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContainerItemType[] getContainerItemsItemsField;
        
        private ErrorResultType[] getContainerItemsErrorResultsField;
        
        private GetContainerItemsResponseStatusType getContainerItemsStatusField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ContainerItem", IsNullable=false)]
        public ContainerItemType[] GetContainerItemsItems {
            get {
                return this.getContainerItemsItemsField;
            }
            set {
                this.getContainerItemsItemsField = value;
                this.RaisePropertyChanged("GetContainerItemsItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ErrorResult", IsNullable=false)]
        public ErrorResultType[] GetContainerItemsErrorResults {
            get {
                return this.getContainerItemsErrorResultsField;
            }
            set {
                this.getContainerItemsErrorResultsField = value;
                this.RaisePropertyChanged("GetContainerItemsErrorResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public GetContainerItemsResponseStatusType GetContainerItemsStatus {
            get {
                return this.getContainerItemsStatusField;
            }
            set {
                this.getContainerItemsStatusField = value;
                this.RaisePropertyChanged("GetContainerItemsStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetContainerItemsRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetContainerItemsRequest GetContainerItemsRequest;
        
        public GetContainerItemsRequest1() {
        }
        
        public GetContainerItemsRequest1(KVK_DataAccess.EWS_PME.GetContainerItemsRequest GetContainerItemsRequest) {
            this.GetContainerItemsRequest = GetContainerItemsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetContainerItemsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetContainerItemsResponse GetContainerItemsResponse;
        
        public GetContainerItemsResponse1() {
        }
        
        public GetContainerItemsResponse1(KVK_DataAccess.EWS_PME.GetContainerItemsResponse GetContainerItemsResponse) {
            this.GetContainerItemsResponse = GetContainerItemsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetItemsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] getItemsIdsField;
        
        private string versionField;
        
        private bool metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public string[] GetItemsIds {
            get {
                return this.getItemsIdsField;
            }
            set {
                this.getItemsIdsField = value;
                this.RaisePropertyChanged("GetItemsIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetItemsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ArrayOfItemType getItemsItemsField;
        
        private ErrorResultType[] getItemsErrorResultsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ArrayOfItemType GetItemsItems {
            get {
                return this.getItemsItemsField;
            }
            set {
                this.getItemsItemsField = value;
                this.RaisePropertyChanged("GetItemsItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ErrorResult", IsNullable=false)]
        public ErrorResultType[] GetItemsErrorResults {
            get {
                return this.getItemsErrorResultsField;
            }
            set {
                this.getItemsErrorResultsField = value;
                this.RaisePropertyChanged("GetItemsErrorResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetItemsRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetItemsRequest GetItemsRequest;
        
        public GetItemsRequest1() {
        }
        
        public GetItemsRequest1(KVK_DataAccess.EWS_PME.GetItemsRequest GetItemsRequest) {
            this.GetItemsRequest = GetItemsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetItemsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetItemsResponse GetItemsResponse;
        
        public GetItemsResponse1() {
        }
        
        public GetItemsResponse1(KVK_DataAccess.EWS_PME.GetItemsResponse GetItemsResponse) {
            this.GetItemsResponse = GetItemsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetValuesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] getValuesIdsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public string[] GetValuesIds {
            get {
                return this.getValuesIdsField;
            }
            set {
                this.getValuesIdsField = value;
                this.RaisePropertyChanged("GetValuesIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetValuesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ValueTypeStateful[] getValuesItemsField;
        
        private ErrorResultType[] getValuesErrorResultsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueItem", IsNullable=false)]
        public ValueTypeStateful[] GetValuesItems {
            get {
                return this.getValuesItemsField;
            }
            set {
                this.getValuesItemsField = value;
                this.RaisePropertyChanged("GetValuesItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ErrorResult", IsNullable=false)]
        public ErrorResultType[] GetValuesErrorResults {
            get {
                return this.getValuesErrorResultsField;
            }
            set {
                this.getValuesErrorResultsField = value;
                this.RaisePropertyChanged("GetValuesErrorResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetValuesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetValuesRequest GetValuesRequest;
        
        public GetValuesRequest1() {
        }
        
        public GetValuesRequest1(KVK_DataAccess.EWS_PME.GetValuesRequest GetValuesRequest) {
            this.GetValuesRequest = GetValuesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetValuesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetValuesResponse GetValuesResponse;
        
        public GetValuesResponse1() {
        }
        
        public GetValuesResponse1(KVK_DataAccess.EWS_PME.GetValuesResponse GetValuesResponse) {
            this.GetValuesResponse = GetValuesResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class SetValuesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ValueTypeStateless[] setValuesItemsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueItem", IsNullable=false)]
        public ValueTypeStateless[] SetValuesItems {
            get {
                return this.setValuesItemsField;
            }
            set {
                this.setValuesItemsField = value;
                this.RaisePropertyChanged("SetValuesItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class SetValuesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ResultType[] setValuesResultsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Result", IsNullable=false)]
        public ResultType[] SetValuesResults {
            get {
                return this.setValuesResultsField;
            }
            set {
                this.setValuesResultsField = value;
                this.RaisePropertyChanged("SetValuesResults");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetValuesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.SetValuesRequest SetValuesRequest;
        
        public SetValuesRequest1() {
        }
        
        public SetValuesRequest1(KVK_DataAccess.EWS_PME.SetValuesRequest SetValuesRequest) {
            this.SetValuesRequest = SetValuesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetValuesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.SetValuesResponse SetValuesResponse;
        
        public SetValuesResponse1() {
        }
        
        public SetValuesResponse1(KVK_DataAccess.EWS_PME.SetValuesResponse SetValuesResponse) {
            this.SetValuesResponse = SetValuesResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoryRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetHistoryRequestGetHistoryParameter getHistoryParameterField;
        
        private GetHistoryRequestGetHistoryFilter getHistoryFilterField;
        
        private string versionField;
        
        private bool metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetHistoryRequestGetHistoryParameter GetHistoryParameter {
            get {
                return this.getHistoryParameterField;
            }
            set {
                this.getHistoryParameterField = value;
                this.RaisePropertyChanged("GetHistoryParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GetHistoryRequestGetHistoryFilter GetHistoryFilter {
            get {
                return this.getHistoryFilterField;
            }
            set {
                this.getHistoryFilterField = value;
                this.RaisePropertyChanged("GetHistoryFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoryRequestGetHistoryParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoryRequestGetHistoryFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timeFromField;
        
        private bool timeFromFieldSpecified;
        
        private System.DateTime timeToField;
        
        private bool timeToFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime TimeFrom {
            get {
                return this.timeFromField;
            }
            set {
                this.timeFromField = value;
                this.RaisePropertyChanged("TimeFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeFromSpecified {
            get {
                return this.timeFromFieldSpecified;
            }
            set {
                this.timeFromFieldSpecified = value;
                this.RaisePropertyChanged("TimeFromSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TimeTo {
            get {
                return this.timeToField;
            }
            set {
                this.timeToField = value;
                this.RaisePropertyChanged("TimeTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeToSpecified {
            get {
                return this.timeToFieldSpecified;
            }
            set {
                this.timeToFieldSpecified = value;
                this.RaisePropertyChanged("TimeToSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoryResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HistoryResponseStatusType getHistoryResponseStatusField;
        
        private HistoryRecordsType getHistoryHistoryRecordsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public HistoryResponseStatusType GetHistoryResponseStatus {
            get {
                return this.getHistoryResponseStatusField;
            }
            set {
                this.getHistoryResponseStatusField = value;
                this.RaisePropertyChanged("GetHistoryResponseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public HistoryRecordsType GetHistoryHistoryRecords {
            get {
                return this.getHistoryHistoryRecordsField;
            }
            set {
                this.getHistoryHistoryRecordsField = value;
                this.RaisePropertyChanged("GetHistoryHistoryRecords");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHistoryRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetHistoryRequest GetHistoryRequest;
        
        public GetHistoryRequest1() {
        }
        
        public GetHistoryRequest1(KVK_DataAccess.EWS_PME.GetHistoryRequest GetHistoryRequest) {
            this.GetHistoryRequest = GetHistoryRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHistoryResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetHistoryResponse GetHistoryResponse;
        
        public GetHistoryResponse1() {
        }
        
        public GetHistoryResponse1(KVK_DataAccess.EWS_PME.GetHistoryResponse GetHistoryResponse) {
            this.GetHistoryResponse = GetHistoryResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmEventsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetAlarmEventsRequestGetAlarmEventsParameter getAlarmEventsParameterField;
        
        private GetAlarmEventsRequestGetAlarmEventsFilter getAlarmEventsFilterField;
        
        private string versionField;
        
        private bool metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetAlarmEventsRequestGetAlarmEventsParameter GetAlarmEventsParameter {
            get {
                return this.getAlarmEventsParameterField;
            }
            set {
                this.getAlarmEventsParameterField = value;
                this.RaisePropertyChanged("GetAlarmEventsParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GetAlarmEventsRequestGetAlarmEventsFilter GetAlarmEventsFilter {
            get {
                return this.getAlarmEventsFilterField;
            }
            set {
                this.getAlarmEventsFilterField = value;
                this.RaisePropertyChanged("GetAlarmEventsFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmEventsRequestGetAlarmEventsParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmEventsRequestGetAlarmEventsFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string priorityFromField;
        
        private string priorityToField;
        
        private string[] typesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string PriorityFrom {
            get {
                return this.priorityFromField;
            }
            set {
                this.priorityFromField = value;
                this.RaisePropertyChanged("PriorityFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=1)]
        public string PriorityTo {
            get {
                return this.priorityToField;
            }
            set {
                this.priorityToField = value;
                this.RaisePropertyChanged("PriorityTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Type", IsNullable=false)]
        public string[] Types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
                this.RaisePropertyChanged("Types");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmEventsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AlarmResponseStatusType getAlarmEventsResponseStatusField;
        
        private AlarmEventsType[] getAlarmEventsAlarmEventsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AlarmResponseStatusType GetAlarmEventsResponseStatus {
            get {
                return this.getAlarmEventsResponseStatusField;
            }
            set {
                this.getAlarmEventsResponseStatusField = value;
                this.RaisePropertyChanged("GetAlarmEventsResponseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("AlarmEvent", IsNullable=false)]
        public AlarmEventsType[] GetAlarmEventsAlarmEvents {
            get {
                return this.getAlarmEventsAlarmEventsField;
            }
            set {
                this.getAlarmEventsAlarmEventsField = value;
                this.RaisePropertyChanged("GetAlarmEventsAlarmEvents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAlarmEventsRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetAlarmEventsRequest GetAlarmEventsRequest;
        
        public GetAlarmEventsRequest1() {
        }
        
        public GetAlarmEventsRequest1(KVK_DataAccess.EWS_PME.GetAlarmEventsRequest GetAlarmEventsRequest) {
            this.GetAlarmEventsRequest = GetAlarmEventsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAlarmEventsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetAlarmEventsResponse GetAlarmEventsResponse;
        
        public GetAlarmEventsResponse1() {
        }
        
        public GetAlarmEventsResponse1(KVK_DataAccess.EWS_PME.GetAlarmEventsResponse GetAlarmEventsResponse) {
            this.GetAlarmEventsResponse = GetAlarmEventsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetUpdatedAlarmEventsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetUpdatedAlarmEventsRequestGetUpdatedAlarmEventsParameter getUpdatedAlarmEventsParameterField;
        
        private GetUpdatedAlarmEventsRequestGetUpdatedAlarmEventsFilter getUpdatedAlarmEventsFilterField;
        
        private string versionField;
        
        private bool metadataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetUpdatedAlarmEventsRequestGetUpdatedAlarmEventsParameter GetUpdatedAlarmEventsParameter {
            get {
                return this.getUpdatedAlarmEventsParameterField;
            }
            set {
                this.getUpdatedAlarmEventsParameterField = value;
                this.RaisePropertyChanged("GetUpdatedAlarmEventsParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GetUpdatedAlarmEventsRequestGetUpdatedAlarmEventsFilter GetUpdatedAlarmEventsFilter {
            get {
                return this.getUpdatedAlarmEventsFilterField;
            }
            set {
                this.getUpdatedAlarmEventsFilterField = value;
                this.RaisePropertyChanged("GetUpdatedAlarmEventsFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetUpdatedAlarmEventsRequestGetUpdatedAlarmEventsParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string lastUpdateField;
        
        private string moreDataRefField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
                this.RaisePropertyChanged("LastUpdate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetUpdatedAlarmEventsRequestGetUpdatedAlarmEventsFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string priorityFromField;
        
        private string priorityToField;
        
        private string[] typesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=0)]
        public string PriorityFrom {
            get {
                return this.priorityFromField;
            }
            set {
                this.priorityFromField = value;
                this.RaisePropertyChanged("PriorityFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=1)]
        public string PriorityTo {
            get {
                return this.priorityToField;
            }
            set {
                this.priorityToField = value;
                this.RaisePropertyChanged("PriorityTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Type", IsNullable=false)]
        public string[] Types {
            get {
                return this.typesField;
            }
            set {
                this.typesField = value;
                this.RaisePropertyChanged("Types");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetUpdatedAlarmEventsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AlarmResponseStatusType getUpdatedAlarmEventsResponseStatusField;
        
        private AlarmEventsType[] getUpdatedAlarmEventsAlarmEventsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AlarmResponseStatusType GetUpdatedAlarmEventsResponseStatus {
            get {
                return this.getUpdatedAlarmEventsResponseStatusField;
            }
            set {
                this.getUpdatedAlarmEventsResponseStatusField = value;
                this.RaisePropertyChanged("GetUpdatedAlarmEventsResponseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("AlarmEvent", IsNullable=false)]
        public AlarmEventsType[] GetUpdatedAlarmEventsAlarmEvents {
            get {
                return this.getUpdatedAlarmEventsAlarmEventsField;
            }
            set {
                this.getUpdatedAlarmEventsAlarmEventsField = value;
                this.RaisePropertyChanged("GetUpdatedAlarmEventsAlarmEvents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUpdatedAlarmEventsRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest GetUpdatedAlarmEventsRequest;
        
        public GetUpdatedAlarmEventsRequest1() {
        }
        
        public GetUpdatedAlarmEventsRequest1(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest GetUpdatedAlarmEventsRequest) {
            this.GetUpdatedAlarmEventsRequest = GetUpdatedAlarmEventsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetUpdatedAlarmEventsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse GetUpdatedAlarmEventsResponse;
        
        public GetUpdatedAlarmEventsResponse1() {
        }
        
        public GetUpdatedAlarmEventsResponse1(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse GetUpdatedAlarmEventsResponse) {
            this.GetUpdatedAlarmEventsResponse = GetUpdatedAlarmEventsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class AcknowledgeAlarmEventsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] acknowledgeAlarmEventsIdsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public string[] AcknowledgeAlarmEventsIds {
            get {
                return this.acknowledgeAlarmEventsIdsField;
            }
            set {
                this.acknowledgeAlarmEventsIdsField = value;
                this.RaisePropertyChanged("AcknowledgeAlarmEventsIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class AcknowledgeAlarmEventsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ResultType[] acknowledgeAlarmEventsResultsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Result", IsNullable=false)]
        public ResultType[] AcknowledgeAlarmEventsResults {
            get {
                return this.acknowledgeAlarmEventsResultsField;
            }
            set {
                this.acknowledgeAlarmEventsResultsField = value;
                this.RaisePropertyChanged("AcknowledgeAlarmEventsResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AcknowledgeAlarmEventsRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest AcknowledgeAlarmEventsRequest;
        
        public AcknowledgeAlarmEventsRequest1() {
        }
        
        public AcknowledgeAlarmEventsRequest1(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest AcknowledgeAlarmEventsRequest) {
            this.AcknowledgeAlarmEventsRequest = AcknowledgeAlarmEventsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AcknowledgeAlarmEventsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse AcknowledgeAlarmEventsResponse;
        
        public AcknowledgeAlarmEventsResponse1() {
        }
        
        public AcknowledgeAlarmEventsResponse1(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse AcknowledgeAlarmEventsResponse) {
            this.AcknowledgeAlarmEventsResponse = AcknowledgeAlarmEventsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmEventTypesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmEventTypesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] getAlarmEventTypesTypesField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Type", IsNullable=false)]
        public string[] GetAlarmEventTypesTypes {
            get {
                return this.getAlarmEventTypesTypesField;
            }
            set {
                this.getAlarmEventTypesTypesField = value;
                this.RaisePropertyChanged("GetAlarmEventTypesTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAlarmEventTypesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest GetAlarmEventTypesRequest;
        
        public GetAlarmEventTypesRequest1() {
        }
        
        public GetAlarmEventTypesRequest1(KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest GetAlarmEventTypesRequest) {
            this.GetAlarmEventTypesRequest = GetAlarmEventTypesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAlarmEventTypesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse GetAlarmEventTypesResponse;
        
        public GetAlarmEventTypesResponse1() {
        }
        
        public GetAlarmEventTypesResponse1(KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse GetAlarmEventTypesResponse) {
            this.GetAlarmEventTypesResponse = GetAlarmEventTypesResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class Subscribe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DeliveryType deliveryField;
        
        private string expiresField;
        
        private SubscribeFilterType filterField;
        
        private string versionField;
        
        private bool metadataField;
        
        private bool metadataFieldSpecified;
        
        private string modeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DeliveryType Delivery {
            get {
                return this.deliveryField;
            }
            set {
                this.deliveryField = value;
                this.RaisePropertyChanged("Delivery");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=1)]
        public string Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
                this.RaisePropertyChanged("Expires");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SubscribeFilterType Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metadataSpecified {
            get {
                return this.metadataFieldSpecified;
            }
            set {
                this.metadataFieldSpecified = value;
                this.RaisePropertyChanged("metadataSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class SubscribeResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SubscriptionManagerType subscriptionManagerField;
        
        private string subscriptionIdField;
        
        private string expiresField;
        
        private ResultType[] resultsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SubscriptionManagerType SubscriptionManager {
            get {
                return this.subscriptionManagerField;
            }
            set {
                this.subscriptionManagerField = value;
                this.RaisePropertyChanged("SubscriptionManager");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
                this.RaisePropertyChanged("SubscriptionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=2)]
        public string Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
                this.RaisePropertyChanged("Expires");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Result", IsNullable=false)]
        public ResultType[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
                this.RaisePropertyChanged("Results");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SubscribeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.Subscribe Subscribe;
        
        public SubscribeRequest() {
        }
        
        public SubscribeRequest(KVK_DataAccess.EWS_PME.Subscribe Subscribe) {
            this.Subscribe = Subscribe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SubscribeResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.SubscribeResponse SubscribeResponse;
        
        public SubscribeResponse1() {
        }
        
        public SubscribeResponse1(KVK_DataAccess.EWS_PME.SubscribeResponse SubscribeResponse) {
            this.SubscribeResponse = SubscribeResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ForceValuesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ValueTypeStateless[] forceValuesItemsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ValueItem", IsNullable=false)]
        public ValueTypeStateless[] ForceValuesItems {
            get {
                return this.forceValuesItemsField;
            }
            set {
                this.forceValuesItemsField = value;
                this.RaisePropertyChanged("ForceValuesItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class ForceValuesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ResultType[] forceValuesResultsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Result", IsNullable=false)]
        public ResultType[] ForceValuesResults {
            get {
                return this.forceValuesResultsField;
            }
            set {
                this.forceValuesResultsField = value;
                this.RaisePropertyChanged("ForceValuesResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ForceValuesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.ForceValuesRequest ForceValuesRequest;
        
        public ForceValuesRequest1() {
        }
        
        public ForceValuesRequest1(KVK_DataAccess.EWS_PME.ForceValuesRequest ForceValuesRequest) {
            this.ForceValuesRequest = ForceValuesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ForceValuesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.ForceValuesResponse ForceValuesResponse;
        
        public ForceValuesResponse1() {
        }
        
        public ForceValuesResponse1(KVK_DataAccess.EWS_PME.ForceValuesResponse ForceValuesResponse) {
            this.ForceValuesResponse = ForceValuesResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetEnumsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] getEnumIdsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public string[] GetEnumIds {
            get {
                return this.getEnumIdsField;
            }
            set {
                this.getEnumIdsField = value;
                this.RaisePropertyChanged("GetEnumIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetEnumsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EnumsType[] getEnumsEnumsField;
        
        private ErrorResultType[] getEnumsErrorResultsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Enum", IsNullable=false)]
        public EnumsType[] GetEnumsEnums {
            get {
                return this.getEnumsEnumsField;
            }
            set {
                this.getEnumsEnumsField = value;
                this.RaisePropertyChanged("GetEnumsEnums");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ErrorResult", IsNullable=false)]
        public ErrorResultType[] GetEnumsErrorResults {
            get {
                return this.getEnumsErrorResultsField;
            }
            set {
                this.getEnumsErrorResultsField = value;
                this.RaisePropertyChanged("GetEnumsErrorResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEnumsRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetEnumsRequest GetEnumsRequest;
        
        public GetEnumsRequest1() {
        }
        
        public GetEnumsRequest1(KVK_DataAccess.EWS_PME.GetEnumsRequest GetEnumsRequest) {
            this.GetEnumsRequest = GetEnumsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEnumsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetEnumsResponse GetEnumsResponse;
        
        public GetEnumsResponse1() {
        }
        
        public GetEnumsResponse1(KVK_DataAccess.EWS_PME.GetEnumsResponse GetEnumsResponse) {
            this.GetEnumsResponse = GetEnumsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmHistoryRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetAlarmHistoryParameterType getAlarmHistoryParameterField;
        
        private GetAlarmHistoryFilterType getAlarmHistoryFilterField;
        
        private string versionField;
        
        private bool metadataField;
        
        private bool metadataFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetAlarmHistoryParameterType GetAlarmHistoryParameter {
            get {
                return this.getAlarmHistoryParameterField;
            }
            set {
                this.getAlarmHistoryParameterField = value;
                this.RaisePropertyChanged("GetAlarmHistoryParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GetAlarmHistoryFilterType GetAlarmHistoryFilter {
            get {
                return this.getAlarmHistoryFilterField;
            }
            set {
                this.getAlarmHistoryFilterField = value;
                this.RaisePropertyChanged("GetAlarmHistoryFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metadataSpecified {
            get {
                return this.metadataFieldSpecified;
            }
            set {
                this.metadataFieldSpecified = value;
                this.RaisePropertyChanged("metadataSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetAlarmHistoryResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SimpleResponseStatusType getAlarmHistoryResponseStatusField;
        
        private ArrayOfAlarmEventType getAlarmHistoryAlarmEventsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SimpleResponseStatusType GetAlarmHistoryResponseStatus {
            get {
                return this.getAlarmHistoryResponseStatusField;
            }
            set {
                this.getAlarmHistoryResponseStatusField = value;
                this.RaisePropertyChanged("GetAlarmHistoryResponseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ArrayOfAlarmEventType GetAlarmHistoryAlarmEvents {
            get {
                return this.getAlarmHistoryAlarmEventsField;
            }
            set {
                this.getAlarmHistoryAlarmEventsField = value;
                this.RaisePropertyChanged("GetAlarmHistoryAlarmEvents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAlarmHistoryRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest GetAlarmHistoryRequest;
        
        public GetAlarmHistoryRequest1() {
        }
        
        public GetAlarmHistoryRequest1(KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest GetAlarmHistoryRequest) {
            this.GetAlarmHistoryRequest = GetAlarmHistoryRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAlarmHistoryResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse GetAlarmHistoryResponse;
        
        public GetAlarmHistoryResponse1() {
        }
        
        public GetAlarmHistoryResponse1(KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse GetAlarmHistoryResponse) {
            this.GetAlarmHistoryResponse = GetAlarmHistoryResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHierarchicalInformationRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string getHierarchicalInformationIdField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string GetHierarchicalInformationId {
            get {
                return this.getHierarchicalInformationIdField;
            }
            set {
                this.getHierarchicalInformationIdField = value;
                this.RaisePropertyChanged("GetHierarchicalInformationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHierarchicalInformationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ItemPathType[] getHierarchicalInformationPathField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ContainerItem", IsNullable=false)]
        public ItemPathType[] GetHierarchicalInformationPath {
            get {
                return this.getHierarchicalInformationPathField;
            }
            set {
                this.getHierarchicalInformationPathField = value;
                this.RaisePropertyChanged("GetHierarchicalInformationPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHierarchicalInformationRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest GetHierarchicalInformationRequest;
        
        public GetHierarchicalInformationRequest1() {
        }
        
        public GetHierarchicalInformationRequest1(KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest GetHierarchicalInformationRequest) {
            this.GetHierarchicalInformationRequest = GetHierarchicalInformationRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHierarchicalInformationResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse GetHierarchicalInformationResponse;
        
        public GetHierarchicalInformationResponse1() {
        }
        
        public GetHierarchicalInformationResponse1(KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse GetHierarchicalInformationResponse) {
            this.GetHierarchicalInformationResponse = GetHierarchicalInformationResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoricalDataAggregationRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetHistoricalDataAggregationParameterType getHistoricalDataAggregationParameterField;
        
        private GetHistoricalDataAggregationFilterType getHistoricalDataAggregationFilterField;
        
        private string versionField;
        
        private bool metadataField;
        
        private bool metadataFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetHistoricalDataAggregationParameterType GetHistoricalDataAggregationParameter {
            get {
                return this.getHistoricalDataAggregationParameterField;
            }
            set {
                this.getHistoricalDataAggregationParameterField = value;
                this.RaisePropertyChanged("GetHistoricalDataAggregationParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GetHistoricalDataAggregationFilterType GetHistoricalDataAggregationFilter {
            get {
                return this.getHistoricalDataAggregationFilterField;
            }
            set {
                this.getHistoricalDataAggregationFilterField = value;
                this.RaisePropertyChanged("GetHistoricalDataAggregationFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metadataSpecified {
            get {
                return this.metadataFieldSpecified;
            }
            set {
                this.metadataFieldSpecified = value;
                this.RaisePropertyChanged("metadataSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetHistoricalDataAggregationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HistoricalDataAggregationResponseStatusType getHistoricalDataAggregationResponseStatusField;
        
        private HistoricalDataAggregationRecordsType getHistoricalDataAggregationRecordsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public HistoricalDataAggregationResponseStatusType GetHistoricalDataAggregationResponseStatus {
            get {
                return this.getHistoricalDataAggregationResponseStatusField;
            }
            set {
                this.getHistoricalDataAggregationResponseStatusField = value;
                this.RaisePropertyChanged("GetHistoricalDataAggregationResponseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public HistoricalDataAggregationRecordsType GetHistoricalDataAggregationRecords {
            get {
                return this.getHistoricalDataAggregationRecordsField;
            }
            set {
                this.getHistoricalDataAggregationRecordsField = value;
                this.RaisePropertyChanged("GetHistoricalDataAggregationRecords");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHistoricalDataAggregationRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest GetHistoricalDataAggregationRequest;
        
        public GetHistoricalDataAggregationRequest1() {
        }
        
        public GetHistoricalDataAggregationRequest1(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest GetHistoricalDataAggregationRequest) {
            this.GetHistoricalDataAggregationRequest = GetHistoricalDataAggregationRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHistoricalDataAggregationResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse GetHistoricalDataAggregationResponse;
        
        public GetHistoricalDataAggregationResponse1() {
        }
        
        public GetHistoricalDataAggregationResponse1(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse GetHistoricalDataAggregationResponse) {
            this.GetHistoricalDataAggregationResponse = GetHistoricalDataAggregationResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class Unsubscribe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIdField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
                this.RaisePropertyChanged("SubscriptionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class UnsubscribeResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIdField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
                this.RaisePropertyChanged("SubscriptionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnsubscribeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.Unsubscribe Unsubscribe;
        
        public UnsubscribeRequest() {
        }
        
        public UnsubscribeRequest(KVK_DataAccess.EWS_PME.Unsubscribe Unsubscribe) {
            this.Unsubscribe = Unsubscribe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnsubscribeResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.UnsubscribeResponse UnsubscribeResponse;
        
        public UnsubscribeResponse1() {
        }
        
        public UnsubscribeResponse1(KVK_DataAccess.EWS_PME.UnsubscribeResponse UnsubscribeResponse) {
            this.UnsubscribeResponse = UnsubscribeResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class Renew : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIdField;
        
        private string expiresField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
                this.RaisePropertyChanged("SubscriptionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=1)]
        public string Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
                this.RaisePropertyChanged("Expires");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class RenewResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIdField;
        
        private string expiresField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
                this.RaisePropertyChanged("SubscriptionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=1)]
        public string Expires {
            get {
                return this.expiresField;
            }
            set {
                this.expiresField = value;
                this.RaisePropertyChanged("Expires");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.Renew Renew;
        
        public RenewRequest() {
        }
        
        public RenewRequest(KVK_DataAccess.EWS_PME.Renew Renew) {
            this.Renew = Renew;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenewResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.RenewResponse RenewResponse;
        
        public RenewResponse1() {
        }
        
        public RenewResponse1(KVK_DataAccess.EWS_PME.RenewResponse RenewResponse) {
            this.RenewResponse = RenewResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetNotificationRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIdField;
        
        private string notificationIdField;
        
        private string moreDataRefField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
                this.RaisePropertyChanged("SubscriptionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string NotificationId {
            get {
                return this.notificationIdField;
            }
            set {
                this.notificationIdField = value;
                this.RaisePropertyChanged("NotificationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetNotificationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIdField;
        
        private string notificationIdField;
        
        private bool moreDataAvailableField;
        
        private string moreDataRefField;
        
        private ItemChangedEvents eventsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionId {
            get {
                return this.subscriptionIdField;
            }
            set {
                this.subscriptionIdField = value;
                this.RaisePropertyChanged("SubscriptionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string NotificationId {
            get {
                return this.notificationIdField;
            }
            set {
                this.notificationIdField = value;
                this.RaisePropertyChanged("NotificationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool MoreDataAvailable {
            get {
                return this.moreDataAvailableField;
            }
            set {
                this.moreDataAvailableField = value;
                this.RaisePropertyChanged("MoreDataAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MoreDataRef {
            get {
                return this.moreDataRefField;
            }
            set {
                this.moreDataRefField = value;
                this.RaisePropertyChanged("MoreDataRef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public ItemChangedEvents Events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
                this.RaisePropertyChanged("Events");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNotificationRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetNotificationRequest GetNotificationRequest;
        
        public GetNotificationRequest1() {
        }
        
        public GetNotificationRequest1(KVK_DataAccess.EWS_PME.GetNotificationRequest GetNotificationRequest) {
            this.GetNotificationRequest = GetNotificationRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNotificationResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetNotificationResponse GetNotificationResponse;
        
        public GetNotificationResponse1() {
        }
        
        public GetNotificationResponse1(KVK_DataAccess.EWS_PME.GetNotificationResponse GetNotificationResponse) {
            this.GetNotificationResponse = GetNotificationResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetSystemEventsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetEventsParameterType getSystemEventsParameterField;
        
        private GetSystemEventsFilterType getSystemEventsFilterField;
        
        private string versionField;
        
        private bool metadataField;
        
        private bool metadataFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetEventsParameterType GetSystemEventsParameter {
            get {
                return this.getSystemEventsParameterField;
            }
            set {
                this.getSystemEventsParameterField = value;
                this.RaisePropertyChanged("GetSystemEventsParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public GetSystemEventsFilterType GetSystemEventsFilter {
            get {
                return this.getSystemEventsFilterField;
            }
            set {
                this.getSystemEventsFilterField = value;
                this.RaisePropertyChanged("GetSystemEventsFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
                this.RaisePropertyChanged("metadata");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool metadataSpecified {
            get {
                return this.metadataFieldSpecified;
            }
            set {
                this.metadataFieldSpecified = value;
                this.RaisePropertyChanged("metadataSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetSystemEventsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private GetSystemEventsResponseStatusType getSystemEventsResponseStatusField;
        
        private SystemEventsType[] getSystemEventsSystemEventsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GetSystemEventsResponseStatusType GetSystemEventsResponseStatus {
            get {
                return this.getSystemEventsResponseStatusField;
            }
            set {
                this.getSystemEventsResponseStatusField = value;
                this.RaisePropertyChanged("GetSystemEventsResponseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SystemEvent", IsNullable=false)]
        public SystemEventsType[] GetSystemEventsSystemEvents {
            get {
                return this.getSystemEventsSystemEventsField;
            }
            set {
                this.getSystemEventsSystemEventsField = value;
                this.RaisePropertyChanged("GetSystemEventsSystemEvents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSystemEventsRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetSystemEventsRequest GetSystemEventsRequest;
        
        public GetSystemEventsRequest1() {
        }
        
        public GetSystemEventsRequest1(KVK_DataAccess.EWS_PME.GetSystemEventsRequest GetSystemEventsRequest) {
            this.GetSystemEventsRequest = GetSystemEventsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSystemEventsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetSystemEventsResponse GetSystemEventsResponse;
        
        public GetSystemEventsResponse1() {
        }
        
        public GetSystemEventsResponse1(KVK_DataAccess.EWS_PME.GetSystemEventsResponse GetSystemEventsResponse) {
            this.GetSystemEventsResponse = GetSystemEventsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetSystemEventTypesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class GetSystemEventTypesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] getSystemEventTypesTypesField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Type", IsNullable=false)]
        public string[] GetSystemEventTypesTypes {
            get {
                return this.getSystemEventTypesTypesField;
            }
            set {
                this.getSystemEventTypesTypesField = value;
                this.RaisePropertyChanged("GetSystemEventTypesTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSystemEventTypesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest GetSystemEventTypesRequest;
        
        public GetSystemEventTypesRequest1() {
        }
        
        public GetSystemEventTypesRequest1(KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest GetSystemEventTypesRequest) {
            this.GetSystemEventTypesRequest = GetSystemEventTypesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSystemEventTypesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse GetSystemEventTypesResponse;
        
        public GetSystemEventTypesResponse1() {
        }
        
        public GetSystemEventTypesResponse1(KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse GetSystemEventTypesResponse) {
            this.GetSystemEventTypesResponse = GetSystemEventTypesResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class UnforceValuesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] unforceValuesIdsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public string[] UnforceValuesIds {
            get {
                return this.unforceValuesIdsField;
            }
            set {
                this.unforceValuesIdsField = value;
                this.RaisePropertyChanged("UnforceValuesIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05")]
    public partial class UnforceValuesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ResultType[] unforceValuesResultsField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Result", IsNullable=false)]
        public ResultType[] UnforceValuesResults {
            get {
                return this.unforceValuesResultsField;
            }
            set {
                this.unforceValuesResultsField = value;
                this.RaisePropertyChanged("UnforceValuesResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnforceValuesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.UnforceValuesRequest UnforceValuesRequest;
        
        public UnforceValuesRequest1() {
        }
        
        public UnforceValuesRequest1(KVK_DataAccess.EWS_PME.UnforceValuesRequest UnforceValuesRequest) {
            this.UnforceValuesRequest = UnforceValuesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnforceValuesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.schneider-electric.com/common/dataexchange/2011/05", Order=0)]
        public KVK_DataAccess.EWS_PME.UnforceValuesResponse UnforceValuesResponse;
        
        public UnforceValuesResponse1() {
        }
        
        public UnforceValuesResponse1(KVK_DataAccess.EWS_PME.UnforceValuesResponse UnforceValuesResponse) {
            this.UnforceValuesResponse = UnforceValuesResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataExchangeChannel : KVK_DataAccess.EWS_PME.IDataExchange, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataExchangeClient : System.ServiceModel.ClientBase<KVK_DataAccess.EWS_PME.IDataExchange>, KVK_DataAccess.EWS_PME.IDataExchange {
        
        public DataExchangeClient() {
        }
        
        public DataExchangeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataExchangeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataExchangeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetWebServiceInformation(KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1 request) {
            return base.Channel.GetWebServiceInformation(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse GetWebServiceInformation(KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest GetWebServiceInformationRequest) {
            KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1();
            inValue.GetWebServiceInformationRequest = GetWebServiceInformationRequest;
            KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetWebServiceInformation(inValue);
            return retVal.GetWebServiceInformationResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetWebServiceInformationAsync(KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1 request) {
            return base.Channel.GetWebServiceInformationAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetWebServiceInformationResponse1> GetWebServiceInformationAsync(KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest GetWebServiceInformationRequest) {
            KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetWebServiceInformationRequest1();
            inValue.GetWebServiceInformationRequest = GetWebServiceInformationRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetWebServiceInformationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetContainerItemsResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetContainerItems(KVK_DataAccess.EWS_PME.GetContainerItemsRequest1 request) {
            return base.Channel.GetContainerItems(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetContainerItemsResponse GetContainerItems(KVK_DataAccess.EWS_PME.GetContainerItemsRequest GetContainerItemsRequest) {
            KVK_DataAccess.EWS_PME.GetContainerItemsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetContainerItemsRequest1();
            inValue.GetContainerItemsRequest = GetContainerItemsRequest;
            KVK_DataAccess.EWS_PME.GetContainerItemsResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetContainerItems(inValue);
            return retVal.GetContainerItemsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetContainerItemsResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetContainerItemsAsync(KVK_DataAccess.EWS_PME.GetContainerItemsRequest1 request) {
            return base.Channel.GetContainerItemsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetContainerItemsResponse1> GetContainerItemsAsync(KVK_DataAccess.EWS_PME.GetContainerItemsRequest GetContainerItemsRequest) {
            KVK_DataAccess.EWS_PME.GetContainerItemsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetContainerItemsRequest1();
            inValue.GetContainerItemsRequest = GetContainerItemsRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetContainerItemsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetItemsResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetItems(KVK_DataAccess.EWS_PME.GetItemsRequest1 request) {
            return base.Channel.GetItems(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetItemsResponse GetItems(KVK_DataAccess.EWS_PME.GetItemsRequest GetItemsRequest) {
            KVK_DataAccess.EWS_PME.GetItemsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetItemsRequest1();
            inValue.GetItemsRequest = GetItemsRequest;
            KVK_DataAccess.EWS_PME.GetItemsResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetItems(inValue);
            return retVal.GetItemsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetItemsResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetItemsAsync(KVK_DataAccess.EWS_PME.GetItemsRequest1 request) {
            return base.Channel.GetItemsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetItemsResponse1> GetItemsAsync(KVK_DataAccess.EWS_PME.GetItemsRequest GetItemsRequest) {
            KVK_DataAccess.EWS_PME.GetItemsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetItemsRequest1();
            inValue.GetItemsRequest = GetItemsRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetItemsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetValuesResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetValues(KVK_DataAccess.EWS_PME.GetValuesRequest1 request) {
            return base.Channel.GetValues(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetValuesResponse GetValues(KVK_DataAccess.EWS_PME.GetValuesRequest GetValuesRequest) {
            KVK_DataAccess.EWS_PME.GetValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.GetValuesRequest1();
            inValue.GetValuesRequest = GetValuesRequest;
            KVK_DataAccess.EWS_PME.GetValuesResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetValues(inValue);
            return retVal.GetValuesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetValuesResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetValuesAsync(KVK_DataAccess.EWS_PME.GetValuesRequest1 request) {
            return base.Channel.GetValuesAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetValuesResponse1> GetValuesAsync(KVK_DataAccess.EWS_PME.GetValuesRequest GetValuesRequest) {
            KVK_DataAccess.EWS_PME.GetValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.GetValuesRequest1();
            inValue.GetValuesRequest = GetValuesRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetValuesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.SetValuesResponse1 KVK_DataAccess.EWS_PME.IDataExchange.SetValues(KVK_DataAccess.EWS_PME.SetValuesRequest1 request) {
            return base.Channel.SetValues(request);
        }
        
        public KVK_DataAccess.EWS_PME.SetValuesResponse SetValues(KVK_DataAccess.EWS_PME.SetValuesRequest SetValuesRequest) {
            KVK_DataAccess.EWS_PME.SetValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.SetValuesRequest1();
            inValue.SetValuesRequest = SetValuesRequest;
            KVK_DataAccess.EWS_PME.SetValuesResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).SetValues(inValue);
            return retVal.SetValuesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.SetValuesResponse1> KVK_DataAccess.EWS_PME.IDataExchange.SetValuesAsync(KVK_DataAccess.EWS_PME.SetValuesRequest1 request) {
            return base.Channel.SetValuesAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.SetValuesResponse1> SetValuesAsync(KVK_DataAccess.EWS_PME.SetValuesRequest SetValuesRequest) {
            KVK_DataAccess.EWS_PME.SetValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.SetValuesRequest1();
            inValue.SetValuesRequest = SetValuesRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).SetValuesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetHistoryResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetHistory(KVK_DataAccess.EWS_PME.GetHistoryRequest1 request) {
            return base.Channel.GetHistory(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetHistoryResponse GetHistory(KVK_DataAccess.EWS_PME.GetHistoryRequest GetHistoryRequest) {
            KVK_DataAccess.EWS_PME.GetHistoryRequest1 inValue = new KVK_DataAccess.EWS_PME.GetHistoryRequest1();
            inValue.GetHistoryRequest = GetHistoryRequest;
            KVK_DataAccess.EWS_PME.GetHistoryResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetHistory(inValue);
            return retVal.GetHistoryResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHistoryResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetHistoryAsync(KVK_DataAccess.EWS_PME.GetHistoryRequest1 request) {
            return base.Channel.GetHistoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHistoryResponse1> GetHistoryAsync(KVK_DataAccess.EWS_PME.GetHistoryRequest GetHistoryRequest) {
            KVK_DataAccess.EWS_PME.GetHistoryRequest1 inValue = new KVK_DataAccess.EWS_PME.GetHistoryRequest1();
            inValue.GetHistoryRequest = GetHistoryRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetHistoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetAlarmEventsResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetAlarmEvents(KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1 request) {
            return base.Channel.GetAlarmEvents(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetAlarmEventsResponse GetAlarmEvents(KVK_DataAccess.EWS_PME.GetAlarmEventsRequest GetAlarmEventsRequest) {
            KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1();
            inValue.GetAlarmEventsRequest = GetAlarmEventsRequest;
            KVK_DataAccess.EWS_PME.GetAlarmEventsResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetAlarmEvents(inValue);
            return retVal.GetAlarmEventsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmEventsResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetAlarmEventsAsync(KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1 request) {
            return base.Channel.GetAlarmEventsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmEventsResponse1> GetAlarmEventsAsync(KVK_DataAccess.EWS_PME.GetAlarmEventsRequest GetAlarmEventsRequest) {
            KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetAlarmEventsRequest1();
            inValue.GetAlarmEventsRequest = GetAlarmEventsRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetAlarmEventsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetUpdatedAlarmEvents(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1 request) {
            return base.Channel.GetUpdatedAlarmEvents(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse GetUpdatedAlarmEvents(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest GetUpdatedAlarmEventsRequest) {
            KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1();
            inValue.GetUpdatedAlarmEventsRequest = GetUpdatedAlarmEventsRequest;
            KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetUpdatedAlarmEvents(inValue);
            return retVal.GetUpdatedAlarmEventsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetUpdatedAlarmEventsAsync(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1 request) {
            return base.Channel.GetUpdatedAlarmEventsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsResponse1> GetUpdatedAlarmEventsAsync(KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest GetUpdatedAlarmEventsRequest) {
            KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetUpdatedAlarmEventsRequest1();
            inValue.GetUpdatedAlarmEventsRequest = GetUpdatedAlarmEventsRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetUpdatedAlarmEventsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse1 KVK_DataAccess.EWS_PME.IDataExchange.AcknowledgeAlarmEvents(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1 request) {
            return base.Channel.AcknowledgeAlarmEvents(request);
        }
        
        public KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse AcknowledgeAlarmEvents(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest AcknowledgeAlarmEventsRequest) {
            KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1();
            inValue.AcknowledgeAlarmEventsRequest = AcknowledgeAlarmEventsRequest;
            KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).AcknowledgeAlarmEvents(inValue);
            return retVal.AcknowledgeAlarmEventsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse1> KVK_DataAccess.EWS_PME.IDataExchange.AcknowledgeAlarmEventsAsync(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1 request) {
            return base.Channel.AcknowledgeAlarmEventsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsResponse1> AcknowledgeAlarmEventsAsync(KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest AcknowledgeAlarmEventsRequest) {
            KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.AcknowledgeAlarmEventsRequest1();
            inValue.AcknowledgeAlarmEventsRequest = AcknowledgeAlarmEventsRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).AcknowledgeAlarmEventsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetAlarmEventTypes(KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1 request) {
            return base.Channel.GetAlarmEventTypes(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse GetAlarmEventTypes(KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest GetAlarmEventTypesRequest) {
            KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1 inValue = new KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1();
            inValue.GetAlarmEventTypesRequest = GetAlarmEventTypesRequest;
            KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetAlarmEventTypes(inValue);
            return retVal.GetAlarmEventTypesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetAlarmEventTypesAsync(KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1 request) {
            return base.Channel.GetAlarmEventTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmEventTypesResponse1> GetAlarmEventTypesAsync(KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest GetAlarmEventTypesRequest) {
            KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1 inValue = new KVK_DataAccess.EWS_PME.GetAlarmEventTypesRequest1();
            inValue.GetAlarmEventTypesRequest = GetAlarmEventTypesRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetAlarmEventTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.SubscribeResponse1 KVK_DataAccess.EWS_PME.IDataExchange.Subscribe(KVK_DataAccess.EWS_PME.SubscribeRequest request) {
            return base.Channel.Subscribe(request);
        }
        
        public KVK_DataAccess.EWS_PME.SubscribeResponse Subscribe(KVK_DataAccess.EWS_PME.Subscribe Subscribe1) {
            KVK_DataAccess.EWS_PME.SubscribeRequest inValue = new KVK_DataAccess.EWS_PME.SubscribeRequest();
            inValue.Subscribe = Subscribe1;
            KVK_DataAccess.EWS_PME.SubscribeResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).Subscribe(inValue);
            return retVal.SubscribeResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.SubscribeResponse1> KVK_DataAccess.EWS_PME.IDataExchange.SubscribeAsync(KVK_DataAccess.EWS_PME.SubscribeRequest request) {
            return base.Channel.SubscribeAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.SubscribeResponse1> SubscribeAsync(KVK_DataAccess.EWS_PME.Subscribe Subscribe) {
            KVK_DataAccess.EWS_PME.SubscribeRequest inValue = new KVK_DataAccess.EWS_PME.SubscribeRequest();
            inValue.Subscribe = Subscribe;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).SubscribeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.ForceValuesResponse1 KVK_DataAccess.EWS_PME.IDataExchange.ForceValues(KVK_DataAccess.EWS_PME.ForceValuesRequest1 request) {
            return base.Channel.ForceValues(request);
        }
        
        public KVK_DataAccess.EWS_PME.ForceValuesResponse ForceValues(KVK_DataAccess.EWS_PME.ForceValuesRequest ForceValuesRequest) {
            KVK_DataAccess.EWS_PME.ForceValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.ForceValuesRequest1();
            inValue.ForceValuesRequest = ForceValuesRequest;
            KVK_DataAccess.EWS_PME.ForceValuesResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).ForceValues(inValue);
            return retVal.ForceValuesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.ForceValuesResponse1> KVK_DataAccess.EWS_PME.IDataExchange.ForceValuesAsync(KVK_DataAccess.EWS_PME.ForceValuesRequest1 request) {
            return base.Channel.ForceValuesAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.ForceValuesResponse1> ForceValuesAsync(KVK_DataAccess.EWS_PME.ForceValuesRequest ForceValuesRequest) {
            KVK_DataAccess.EWS_PME.ForceValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.ForceValuesRequest1();
            inValue.ForceValuesRequest = ForceValuesRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).ForceValuesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetEnumsResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetEnums(KVK_DataAccess.EWS_PME.GetEnumsRequest1 request) {
            return base.Channel.GetEnums(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetEnumsResponse GetEnums(KVK_DataAccess.EWS_PME.GetEnumsRequest GetEnumsRequest) {
            KVK_DataAccess.EWS_PME.GetEnumsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetEnumsRequest1();
            inValue.GetEnumsRequest = GetEnumsRequest;
            KVK_DataAccess.EWS_PME.GetEnumsResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetEnums(inValue);
            return retVal.GetEnumsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetEnumsResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetEnumsAsync(KVK_DataAccess.EWS_PME.GetEnumsRequest1 request) {
            return base.Channel.GetEnumsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetEnumsResponse1> GetEnumsAsync(KVK_DataAccess.EWS_PME.GetEnumsRequest GetEnumsRequest) {
            KVK_DataAccess.EWS_PME.GetEnumsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetEnumsRequest1();
            inValue.GetEnumsRequest = GetEnumsRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetEnumsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetAlarmHistory(KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1 request) {
            return base.Channel.GetAlarmHistory(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse GetAlarmHistory(KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest GetAlarmHistoryRequest) {
            KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1 inValue = new KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1();
            inValue.GetAlarmHistoryRequest = GetAlarmHistoryRequest;
            KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetAlarmHistory(inValue);
            return retVal.GetAlarmHistoryResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetAlarmHistoryAsync(KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1 request) {
            return base.Channel.GetAlarmHistoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetAlarmHistoryResponse1> GetAlarmHistoryAsync(KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest GetAlarmHistoryRequest) {
            KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1 inValue = new KVK_DataAccess.EWS_PME.GetAlarmHistoryRequest1();
            inValue.GetAlarmHistoryRequest = GetAlarmHistoryRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetAlarmHistoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetHierarchicalInformation(KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1 request) {
            return base.Channel.GetHierarchicalInformation(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse GetHierarchicalInformation(KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest GetHierarchicalInformationRequest) {
            KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1();
            inValue.GetHierarchicalInformationRequest = GetHierarchicalInformationRequest;
            KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetHierarchicalInformation(inValue);
            return retVal.GetHierarchicalInformationResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetHierarchicalInformationAsync(KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1 request) {
            return base.Channel.GetHierarchicalInformationAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHierarchicalInformationResponse1> GetHierarchicalInformationAsync(KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest GetHierarchicalInformationRequest) {
            KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetHierarchicalInformationRequest1();
            inValue.GetHierarchicalInformationRequest = GetHierarchicalInformationRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetHierarchicalInformationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetHistoricalDataAggregation(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1 request) {
            return base.Channel.GetHistoricalDataAggregation(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse GetHistoricalDataAggregation(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest GetHistoricalDataAggregationRequest) {
            KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1();
            inValue.GetHistoricalDataAggregationRequest = GetHistoricalDataAggregationRequest;
            KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetHistoricalDataAggregation(inValue);
            return retVal.GetHistoricalDataAggregationResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetHistoricalDataAggregationAsync(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1 request) {
            return base.Channel.GetHistoricalDataAggregationAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationResponse1> GetHistoricalDataAggregationAsync(KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest GetHistoricalDataAggregationRequest) {
            KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetHistoricalDataAggregationRequest1();
            inValue.GetHistoricalDataAggregationRequest = GetHistoricalDataAggregationRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetHistoricalDataAggregationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.UnsubscribeResponse1 KVK_DataAccess.EWS_PME.IDataExchange.Unsubscribe(KVK_DataAccess.EWS_PME.UnsubscribeRequest request) {
            return base.Channel.Unsubscribe(request);
        }
        
        public KVK_DataAccess.EWS_PME.UnsubscribeResponse Unsubscribe(KVK_DataAccess.EWS_PME.Unsubscribe Unsubscribe1) {
            KVK_DataAccess.EWS_PME.UnsubscribeRequest inValue = new KVK_DataAccess.EWS_PME.UnsubscribeRequest();
            inValue.Unsubscribe = Unsubscribe1;
            KVK_DataAccess.EWS_PME.UnsubscribeResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).Unsubscribe(inValue);
            return retVal.UnsubscribeResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.UnsubscribeResponse1> KVK_DataAccess.EWS_PME.IDataExchange.UnsubscribeAsync(KVK_DataAccess.EWS_PME.UnsubscribeRequest request) {
            return base.Channel.UnsubscribeAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.UnsubscribeResponse1> UnsubscribeAsync(KVK_DataAccess.EWS_PME.Unsubscribe Unsubscribe) {
            KVK_DataAccess.EWS_PME.UnsubscribeRequest inValue = new KVK_DataAccess.EWS_PME.UnsubscribeRequest();
            inValue.Unsubscribe = Unsubscribe;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).UnsubscribeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.RenewResponse1 KVK_DataAccess.EWS_PME.IDataExchange.Renew(KVK_DataAccess.EWS_PME.RenewRequest request) {
            return base.Channel.Renew(request);
        }
        
        public KVK_DataAccess.EWS_PME.RenewResponse Renew(KVK_DataAccess.EWS_PME.Renew Renew1) {
            KVK_DataAccess.EWS_PME.RenewRequest inValue = new KVK_DataAccess.EWS_PME.RenewRequest();
            inValue.Renew = Renew1;
            KVK_DataAccess.EWS_PME.RenewResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).Renew(inValue);
            return retVal.RenewResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.RenewResponse1> KVK_DataAccess.EWS_PME.IDataExchange.RenewAsync(KVK_DataAccess.EWS_PME.RenewRequest request) {
            return base.Channel.RenewAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.RenewResponse1> RenewAsync(KVK_DataAccess.EWS_PME.Renew Renew) {
            KVK_DataAccess.EWS_PME.RenewRequest inValue = new KVK_DataAccess.EWS_PME.RenewRequest();
            inValue.Renew = Renew;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).RenewAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetNotificationResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetNotification(KVK_DataAccess.EWS_PME.GetNotificationRequest1 request) {
            return base.Channel.GetNotification(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetNotificationResponse GetNotification(KVK_DataAccess.EWS_PME.GetNotificationRequest GetNotificationRequest) {
            KVK_DataAccess.EWS_PME.GetNotificationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetNotificationRequest1();
            inValue.GetNotificationRequest = GetNotificationRequest;
            KVK_DataAccess.EWS_PME.GetNotificationResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetNotification(inValue);
            return retVal.GetNotificationResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetNotificationResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetNotificationAsync(KVK_DataAccess.EWS_PME.GetNotificationRequest1 request) {
            return base.Channel.GetNotificationAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetNotificationResponse1> GetNotificationAsync(KVK_DataAccess.EWS_PME.GetNotificationRequest GetNotificationRequest) {
            KVK_DataAccess.EWS_PME.GetNotificationRequest1 inValue = new KVK_DataAccess.EWS_PME.GetNotificationRequest1();
            inValue.GetNotificationRequest = GetNotificationRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetNotificationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetSystemEventsResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetSystemEvents(KVK_DataAccess.EWS_PME.GetSystemEventsRequest1 request) {
            return base.Channel.GetSystemEvents(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetSystemEventsResponse GetSystemEvents(KVK_DataAccess.EWS_PME.GetSystemEventsRequest GetSystemEventsRequest) {
            KVK_DataAccess.EWS_PME.GetSystemEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetSystemEventsRequest1();
            inValue.GetSystemEventsRequest = GetSystemEventsRequest;
            KVK_DataAccess.EWS_PME.GetSystemEventsResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetSystemEvents(inValue);
            return retVal.GetSystemEventsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetSystemEventsResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetSystemEventsAsync(KVK_DataAccess.EWS_PME.GetSystemEventsRequest1 request) {
            return base.Channel.GetSystemEventsAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetSystemEventsResponse1> GetSystemEventsAsync(KVK_DataAccess.EWS_PME.GetSystemEventsRequest GetSystemEventsRequest) {
            KVK_DataAccess.EWS_PME.GetSystemEventsRequest1 inValue = new KVK_DataAccess.EWS_PME.GetSystemEventsRequest1();
            inValue.GetSystemEventsRequest = GetSystemEventsRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetSystemEventsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse1 KVK_DataAccess.EWS_PME.IDataExchange.GetSystemEventTypes(KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1 request) {
            return base.Channel.GetSystemEventTypes(request);
        }
        
        public KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse GetSystemEventTypes(KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest GetSystemEventTypesRequest) {
            KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1 inValue = new KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1();
            inValue.GetSystemEventTypesRequest = GetSystemEventTypesRequest;
            KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetSystemEventTypes(inValue);
            return retVal.GetSystemEventTypesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse1> KVK_DataAccess.EWS_PME.IDataExchange.GetSystemEventTypesAsync(KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1 request) {
            return base.Channel.GetSystemEventTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.GetSystemEventTypesResponse1> GetSystemEventTypesAsync(KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest GetSystemEventTypesRequest) {
            KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1 inValue = new KVK_DataAccess.EWS_PME.GetSystemEventTypesRequest1();
            inValue.GetSystemEventTypesRequest = GetSystemEventTypesRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).GetSystemEventTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KVK_DataAccess.EWS_PME.UnforceValuesResponse1 KVK_DataAccess.EWS_PME.IDataExchange.UnforceValues(KVK_DataAccess.EWS_PME.UnforceValuesRequest1 request) {
            return base.Channel.UnforceValues(request);
        }
        
        public KVK_DataAccess.EWS_PME.UnforceValuesResponse UnforceValues(KVK_DataAccess.EWS_PME.UnforceValuesRequest UnforceValuesRequest) {
            KVK_DataAccess.EWS_PME.UnforceValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.UnforceValuesRequest1();
            inValue.UnforceValuesRequest = UnforceValuesRequest;
            KVK_DataAccess.EWS_PME.UnforceValuesResponse1 retVal = ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).UnforceValues(inValue);
            return retVal.UnforceValuesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.UnforceValuesResponse1> KVK_DataAccess.EWS_PME.IDataExchange.UnforceValuesAsync(KVK_DataAccess.EWS_PME.UnforceValuesRequest1 request) {
            return base.Channel.UnforceValuesAsync(request);
        }
        
        public System.Threading.Tasks.Task<KVK_DataAccess.EWS_PME.UnforceValuesResponse1> UnforceValuesAsync(KVK_DataAccess.EWS_PME.UnforceValuesRequest UnforceValuesRequest) {
            KVK_DataAccess.EWS_PME.UnforceValuesRequest1 inValue = new KVK_DataAccess.EWS_PME.UnforceValuesRequest1();
            inValue.UnforceValuesRequest = UnforceValuesRequest;
            return ((KVK_DataAccess.EWS_PME.IDataExchange)(this)).UnforceValuesAsync(inValue);
        }
    }
}
